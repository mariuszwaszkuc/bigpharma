{
	"name": "D_DIM_SQL",
	"properties": {
		"folder": {
			"name": "Load Gold"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "127b06cd-0b12-4f93-8bde-f4174d9030da"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"-- Tworzenie sesji Spark z obsługą Delta Lake\n",
					"CREATE DATABASE IF NOT EXISTS bigpharma;\n",
					"\n",
					"-- Załaduj dane z warstwy Silver do tabel tymczasowych\n",
					"CREATE OR REPLACE TEMP VIEW d_products_silver AS\n",
					"SELECT *\n",
					"FROM delta.`abfss://silver@bigpharma.dfs.core.windows.net/d_products`;\n",
					"\n",
					"CREATE OR REPLACE TEMP VIEW d_regions_silver AS\n",
					"SELECT *\n",
					"FROM delta.`abfss://silver@bigpharma.dfs.core.windows.net/d_customers`;\n",
					"\n",
					"-- Zmień nazwy kolumn w d_products\n",
					"CREATE OR REPLACE TEMP VIEW d_products_gold AS\n",
					"SELECT\n",
					"    product_id AS IdProduct,\n",
					"    product_name AS Name,\n",
					"    brand_name AS Brand,\n",
					"    sub_brand_name AS SubBrand,\n",
					"    category_name AS Category\n",
					"FROM d_products_silver;\n",
					"\n",
					"-- Zapisz dane do warstwy Gold (d_products)\n",
					"-- Tworzymy tabelę Delta, jeżeli nie istnieje, lub aktualizujemy dane w warstwie Gold\n",
					"MERGE INTO delta.`abfss://gold@bigpharma.dfs.core.windows.net/d_products` AS gold\n",
					"USING d_products_gold AS new_data\n",
					"ON gold.IdProduct = new_data.IdProduct\n",
					"WHEN MATCHED THEN\n",
					"    UPDATE SET\n",
					"        gold.Name = new_data.Name,\n",
					"        gold.Brand = new_data.Brand,\n",
					"        gold.SubBrand = new_data.SubBrand,\n",
					"        gold.Category = new_data.Category\n",
					"WHEN NOT MATCHED THEN\n",
					"    INSERT (IdProduct, Name, Brand, SubBrand, Category)\n",
					"    VALUES (new_data.IdProduct, new_data.Name, new_data.Brand, new_data.SubBrand, new_data.Category);\n",
					"\n",
					"-- Wybierz i przekształć dane z d_regions\n",
					"CREATE OR REPLACE TEMP VIEW d_regions_gold AS\n",
					"SELECT\n",
					"    country_id AS IDCountry,\n",
					"    cluster AS Claster,\n",
					"    region_description AS Region,\n",
					"    country AS Country\n",
					"FROM d_regions_silver;\n",
					"\n",
					"-- Usuwamy duplikaty i zapisujemy dane do warstwy Gold (d_regions)\n",
					"CREATE OR REPLACE TEMP VIEW unique_d_regions AS\n",
					"SELECT DISTINCT *\n",
					"FROM d_regions_gold;\n",
					"\n",
					"-- Zapisz do warstwy Gold (d_regions)\n",
					"MERGE INTO delta.`abfss://gold@bigpharma.dfs.core.windows.net/d_regions` AS gold\n",
					"USING unique_d_regions AS new_data\n",
					"ON gold.IDCountry = new_data.IDCountry\n",
					"    AND gold.Claster = new_data.Claster\n",
					"    AND gold.Region = new_data.Region\n",
					"    AND gold.Country = new_data.Country\n",
					"WHEN MATCHED THEN\n",
					"    UPDATE SET\n",
					"        gold.Claster = new_data.Claster,\n",
					"        gold.Region = new_data.Region,\n",
					"        gold.Country = new_data.Country\n",
					"WHEN NOT MATCHED THEN\n",
					"    INSERT (IDCountry, Claster, Region, Country\n",
					""
				],
				"execution_count": null
			}
		]
	}
}